echo "hello im z0mbi3"
neofetch
reboot
neofetch
sxhkd --help
echo $http_proxy
. ~/proxy_env.sh
echo $http_proxy
sudo -E pacman -S alacritty
nmtui
bat .config/bspwm/sxhkdrc
sxhkd &
./Theme.sh
./Theme.sh
killall eww
pacman -Q | grep xqp
brightnessctl i | grep -oP '\(\K[^%\)]+'
killall polybar
grep -irn polybar --color
echo ${rice_dir}
polybar -c /home/sebas/.config/bspwm/rices/emilia/config.ini
nmtui
sudo pacman -S base-devel rustup pacman-contrib bspwm polybar sxhkd brightnessctl dunst rofi lsd stalonetray jq polkit-gnome git playerctl mpd xclip ncmpcpp geany ranger mpc picom xdo xdotool jgmenu ueberzug maim pamixer libwebp xdg-user-dirs webp-pixbuf-loader xorg-xprop xorg-xkill physlock papirus-icon-theme ttf-jetbrains-mono ttf-jetbrains-mono-nerd ttf-terminus-nerd ttf-inconsolata ttf-joypixels zsh zsh-autosuggestions zsh-history-substring-search zsh-syntax-highlighting xorg-xsetroot xorg-xwininfo xorg-xrandr --needed
sudo pacman -S base-devel pacman-contrib bspwm polybar sxhkd brightnessctl dunst rofi lsd stalonetray jq polkit-gnome git playerctl mpd xclip ncmpcpp geany ranger mpc picom xdo xdotool jgmenu ueberzug maim pamixer libwebp xdg-user-dirs webp-pixbuf-loader xorg-xprop xorg-xkill physlock papirus-icon-theme ttf-jetbrains-mono ttf-jetbrains-mono-nerd ttf-terminus-nerd ttf-inconsolata ttf-joypixels zsh zsh-autosuggestions zsh-history-substring-search zsh-syntax-highlighting xorg-xsetroot xorg-xwininfo xorg-xrandr --needed
sudo pacman -S base-devel pacman-contrib bspwm polybar sxhkd brightnessctl dunst rofi lsd stalonetray jq polkit-gnome git playerctl mpd xclip ncmpcpp geany ranger mpc xdo xdotool jgmenu ueberzug maim pamixer libwebp xdg-user-dirs webp-pixbuf-loader xorg-xprop xorg-xkill physlock papirus-icon-theme ttf-jetbrains-mono ttf-jetbrains-mono-nerd ttf-terminus-nerd ttf-inconsolata ttf-joypixels zsh zsh-autosuggestions zsh-history-substring-search zsh-syntax-highlighting xorg-xsetroot xorg-xwininfo xorg-xrandr --needed
neofetch
btop
grep -irn pamixer --color
ps -e | grep spotify
killall spotify
yay -S xqp
yay -S tdrop-git
amixer -D pulse sset Master { {10%}}
amixer -D pulse sset Master {{10%}}
amixer -D pulse sset Master {{10%+}}
amixer -D pulse sset Master { {10%+}}
bash
aplay -i
aplay -l
amixer scontrols
amixer get Master
aplay -i
aplay -L
aplay -L | grep pulse
pactl list sinks | grep Name
pactl list sinks
pactl list sinks | grep Nombre
sudo nano /etc/asound.conf
sudo nano /etc/pulse/default.pa
sudo systemctl restart alsa
sudo systemctl restart pulseaudio
amixer -D pulse sset Master '{ {10%}}'
amixer -D pulse sset Master '{ {10%+}}'
amixer -D pulse sset Master '{ {30%+}}'
amixer get Master
amixer -D pulse sset Master 10%+
amixer -D pulse sset Master 10%-
sudo systemctl restart alsa
pamixer --get-volume-human | tr -d '%'
amixer -D pulse get Master | grep -o '[0-9]*%' | sed 's/%//'
amixer -D pulse get Master | grep -o '[0-9]*%' | sed 's/%//' | awk '{sum+=$1} END {print sum/NR}'
amixer -D pulse get Master | grep -o '[0-9]*%'
sudo pacman -Rcns pamixer
mpc -q next
pgrep spotify
killall spotify
pgrep spotify
killall spotify
pgrep spotify
killall spotify
-n "$(pgrep spotify)
playerctl --help
playerctl --player
playerctl --player=*
playerctl --player=%any play-pause
pgrep mpd
mpd
playerctl --player="%any" play-pause
killall spotify
nmtui
playerctl --player=$Control stop
pgrep spotify
killall spotify
pgrep mpd
pkill mpd
pgrep mpd
mpd
pgrep mpd
pkill mpd
mpd
pkill mpd
lsof -i :6600
pkill mpd
mpd
systemctl status mpd
systemctl start mpd
systemctl status mpd
mpd
systemctl status mpd
systemctl start mpd
mpd
pkill mpd
rofi -h
nano /home/sebas/.config/rofi/config.rasi
cd /home/sebas/.config/bspwm/scripts/
grep -irn bindsym --color
feh
sudo -Q | grep feh
pacman -Q | grep feh
yay -Qua
eww open player
eww open player -c .config/bspwm/eww
eww open player -c .config/bspwm/eww/player
eww open --toggle music -c .config/bspwm/eww/player
eww -c .config/bspwm/eww open --toggle music
eww -c .config/bspwm/eww open music
pgrep mpd
ls /usr/share/applications | grep grid
ncmpcpp
mpd
ncmpcpp
killall mpd && mpd
ncmpcpp
mpd
killall mpd && mpd
killall mpd
ncmpcpp
mpd
killall mpd
mpd
killall mpd
mpd
mpd --help
mpd --kill
killall mpd
mpd
killall mpd
mpd
killall mpd
ncmpcpp
mpd
killall mpd
mpd
nmtui
. ./proxy_env.sh
echo $http_proxy
nano proxy_env.sh
. ./proxy_env.sh
echo $http_proxy
vivaldi-stable --incognito --proxy-server=$http_proxy
rofi -show wifi
nmcli
alacritty -name nmtui -e nmtui
alacritty --help
kitty --help
rofi -show wifi -modi wifi:nmcli_dmenu
pacman -Ss nmcli_dmenu
yay nmcli_dmenu
yay nmcli-dmenu
yay nmcli | grep dmenu
nmcpcpp
ncmpcpp
systemctl --user restart mpd
mpc
mpc --help
mpc -h
mpc update
mpc play
mpc list
mpc ls
mpc update
mpc ls | mpc add
mpc update
mpc ls
echo $XDG_MUSIC_DIR
xdg-user-dirs --help
xdg-user-dir --help
xdotool getactivewindow getwindowname
sleep 5; xdotool getactivewindow getwindowname
alacritty --class ncmcpp -e ncmcpp
alacritty --class "ncmcpp" -e ncmcpp
alacritty --class "ncmpcpp" -e ncmpcpp
playerctl ls
playerctl -l
sleep 5; xdotool getactivewindow getwindowname
alacritty --class "ncmpcpp" -e ncmpcpp
playerctl -l --ignore-player=chromium | head -n 1
pacman -Q | grep paru
neofetch
checkupdates
wc -l
playerctl -l --ignore-player=chromium
playerctl -l
picom -b
pgrep mpd
ls -1 /sys/class/power_supply/
ls -1 /sys/class/backlight/
ip link | awk '/state UP/ {print $2}' | tr -d :
ip link | awk '/state UP/ {print $2}'
fc-list
fc-list | grep Hack
fc-list | grep Nerd
fc-list | grep "Nerd Font"
systemctl --user restart mpd
systemctl --user status mpd
systemctl --user enable --now mpd
killall mpd
systemctl --user enable --now mpd
systemctl --user start mpd
killall ncmpcpp
killall mpd
systemctl --user start mpd
nano .config/bspwm/sxhkdrc
systemctl --user start mpd
killall mpd
systemctl --user restart mpd
systemctl --user enable --now mpd
systemctl --user stop mpd
systemctl --user start mpd
xdg-mime --help
xdg-mime query
cat .bash_history | grep terminal
cat .bash_history | grep default
xdg-settings --list
xdg-settings --help
xdg-settings get default-web-browser
xdg-settings get default-url-scheme-handler
cat .bash_history | grep xdg-mime
nano /usr/share/applications/org.gnome.Terminal.desktop
printenv
printenv | grep TERMINAL
physlock --help
physlock -h
physlock -d
xdg-mime -h
xdg-mime --help
xdg-mime --manual
fastboot reboot fastboot
adb reboot fastboot
fastboot erase userdata
lsusb -v | less
fastboot devices
sudo fastboot devices
sudo nvim /etc/udev/rules.d/11-android.rules
sudo service udev restart
rm /etc/udev/rules.d/11-android.rules
sudo rm /etc/udev/rules.d/11-android.rules
sudo fastboot erase userdata
avbtool make_vbmeta_image --flags 2 --padding_size 4096 --output vbmeta_disable.img
cd GSI\ ISOS
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-quack-arm32_binder64-ab-gapps.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system system-quack-arm32_binder64-ab-go.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system system-arm32_binder64-ab-gapps-su.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-arm32_binder64-ab-gapps-su.img
sudo fastboot -w
sudo fastboot reboot
sudo fastboot reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-roar-arm32_binder64-ab-gogapps.img
sudo fastboot -w
sudo fastboot reboot
sudo fastboot reboot fastboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-arm32_binder64-ab-vanilla-nosu.img
sudo fastboot -w
sudo fastboot reboot
sudo fastboot reboot fastboot
sudo fastboot erase system
sudo fastboot flash system caos-v224-201029-arm-bgN.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot reboot fastboot
adb reboot fastboot
sudo fastboot reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system PixelExperience_A64AB-10.0-20200118-2235-GSI.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system EvolutionX_4.0_A64AB-10.0-20200113-0703-GSI.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system Havoc-OS-v3.3-20200402-a64-ab-vanilla-nosu.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system system-quack-arm32_binder64-ab-vanilla.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system PixelExperience_A64AB-10.0-20200118-2235-GSI.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system EvolutionX_4.0_A64AB-10.0-20200113-0703-GSI.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system Havoc-OS-v3.3-20200402-a64-ab-vanilla-nosu.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-quack-arm32_binder64-ab-gapps.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system-quack-arm32_binder64-ab-go.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot --disable-verity --disable-verification flash vbmeta vbmeta_disable.img
sudo fastboot erase system
sudo fastboot flash system system.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system dotOS-R-v5.2-arm32-binder64-ab-VANILLA-OFFICIAL.img
sudo fastboot -w
sudo fastboot reboot
adb reboot fastboot
sudo fastboot erase system
sudo fastboot flash system system.img
sudo fastboot -w
sudo fastboot reboot
sudo fastboot devices
sudo fastboot flash recovery recovery.img
sudo fastboot reboot
pacman -Ss libreoffice
sudo pacman -S libreoffice-fresh libreoffice-fresh-es
echo $http_proxy
sudo pacman -Sy libreoffice-fresh libreoffice-fresh-es
libreoffice --writer
find / -name libicuuc.* 2>/dev/null
find / -name libicuuc.so.* 2>/dev/null
sudo pacman -S icu
sudo pacman -Syu
su
free -h
man ascii
sudo pacman -S ascii
man ascii
u+00B2
pacman -Ss zoom
yay -Ss zoom
ls /usr/share/X11/xorg.conf.d
sudo nano /usr/share/X11/xorg.conf.d/40-libinput.conf
sudo nano /etc/X11/xorg.conf.d/30-touchpad.conf
neofetch
sensors
for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
ls /sys/class/thermal/thermal_zone*/type
ls /sys/class/thermal/thermal_zone*/type/
ls /sys/class/thermal/thermal_zone0/type
cat /sys/class/thermal/thermal_zone0/type
cat /sys/class/thermal/thermal_zone8/type
ls /sys/class/thermal/thermal_zone*/type
cat /sys/class/thermal/thermal_zone5/type
sensors
nmcpcpp
nmcli
ncmpcpp
poweroff
kill -9 -1
grep -irn eww --color
grep -irn xinit --color
grep -irn xinit --color
grep -irn initrc --color
grep -irn eww --color
grep -irn eww --color
cd Escritorio
git clone https://github.com/cherrynoize/dotfiles.git
eww -help
eww -c /home/sebas/.config/eww/
eww open -c /home/sebas/.config/eww/
eww open -c /home/sebas/.config/eww/ topbar
eww kill
eww daemon
eww open -c /home/sebas/.config/eww/ topbar
bash /home/sebas/.config/eww/launch.sh
eww kill
bspc node -k
bspc node -help
bspc node -h
bspc node -c
xprop | grep WM_CLASS | awk '{print $4}'
xprop
./temp.sh
cat /sys/devices/platform/coretemp.0/hwmon/hwmon4/temp1_input 
./temp.sh
cat /sys/devices/platform/coretemp.0/hwmon/hwmon4/temp1_input | awk '{print int($1/1000)}'
./temp.sh
grep -irn stalonetray --color
grep -irn player.yuck --color
grep -irn player --color
nvim /home/sebas/.config/bspwm/eww/player/player.yuck
sed -i "$HOME"/.config/bspwm/eww/player/player.yuck '/:geometry (geometry :x/c\:geometry :x "-0.6%"'
sed -i "$HOME"/.config/bspwm/eww/player/player.yuck 's/:geometry (geometry :x/c\:geometry :x "-0.6%"'
sed -i "$HOME"/.config/bspwm/eww/player/player.yuck 's/:geometry (geometry :x "[^"]*"/:geometry (geometry :x "-0.6%"'
sed -i 's/:geometry (geometry :x "[^"]*"/:geometry (geometry :x "-0.6%")/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :x "[^"]*"/:geometry (geometry :x "-0.6%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
grep -irn autoexec --color
grep -irn gh0s --color
git clone --depth=1 https://github.com/gh0stzk/dotfiles.git
git clone https://github.com/gh0stzk/dotfiles.git
xprop
grep -irn netmanager --color
./NetManagerDM
grep -irn volume: --color
amixer -D pulse get Master | grep -o '[0-9]*%' | sed 's/%//'
amixer -D pulse get Master | grep -o '[0-9]*%'
amixer -D pulse get Master
amixer -D pulse get Master | grep -o '[0-9]*%' | print $2
amixer -D pulse get Master | grep -o '[0-9]*%' | sed 's/%//' | head -n 1
amixer -D pulse get Master | grep -o '[0-9]*%' | tr -d '%' | head -n 1
amixer -D pulse get Master | grep -o '[0-9]*%' | tr -d '%' | head -1
amixer -D pulse get Master | grep -o '[0-9]*%' | tr -d '%' | head -n
amixer -D pulse get Master | grep -o '[0-9]*%' | tr -d '%' | head -n1
amixer -D pulse get Master | grep -m 1 -oP '[0-9]+(?=%)'
grep -irn "head -n" --color
pactl get-sink-volume @DEFAULT_SINK@ | awk '{printf $5}' | cut -d '%' -f 1
pactl get-sink-volume @DEFAULT_SINK@
pactl set-source-mute @DEFAULT_SOURCE@ toggle
pactl set-source-mute @DEFAULT_SOURCE@
pactl set-source-mute @DEFAULT_SOURCE@ toggle
pactl get-source-mute @DEFAULT_SOURCE@
pactl set-source-mute @DEFAULT_SOURCE@ toggle
pactl get-source-mute @DEFAULT_SOURCE@
eww -c "$HOME/.config/bspwm/eww" open --toggle music
systemctl suspend
sudo pacman -S physlock
physlock --help
sudo nano /etc/pam.d/physlock
sudo nano /etc/pam.d/vlock
mantablockscreen -sc
xprintidle
brightnessctl i | grep -oP '\(\K[^%\)]+'
var=`light -G`\
    echo "${var##* }" | sed 's/[^0-9][^.]*//g'
brightnessctl i | grep -oP '\(\K[^%\)]+'
var=`light -G`\
    echo "${var##* }" | sed 's/[^0-9][^.]*//g'
pamixer --get-volume-human | sed 's/%//'
amixer -D pulse sget Master | grep 'Right:' | awk -F'[][]' '{ print $2 }\

amixer sget Master | grep 'Right:' | awk -F'[][]' '{ print $2 }
amixer sget Master | grep 'Right:' | awk -F'[][]' '{print $2}
pactl get-sink-volume @DEFAULT_SINK@ | awk '{printf $5}' | cut -d '%' -f 1
pactl get-sink-mute @DEFAULT_SINK@
pactl list sinks | grep '^[[:space:]]Volume:' | awk -F'/' '{ print $2 }'
pactl list sinks | grep '^[[:space:]]Mute:' | awk -F'/' '{ print $2 }'
pactl list sinks
pactl list sinks | grep '^[[:space:]]Volumen:' | awk -F'/' '{ print $2 }'
pactl list sinks | grep '^[[:space:]]Silencio:' | awk -F'/' '{ print $2 }'
pactl list sinks | grep -E '^[[:space:]]Volume:' | awk -F'/' '{ print $2 }'
pactl list sinks | grep '^[[:space:]]Silencio:' | awk -F'/' '{ print $1 }'
pactl list sinks | grep '^[[:space:]]Silencio:' | awk -F'/' '{ print $3 }'
pactl list sinks | grep '^[[:space:]]Silencio:' | awk -F'/' '{ print $0 }'
pactl get-sink-mute @DEFAULT_SINK@
pactl list sinks | grep 'Volumen:' -A 2 | tail -n 1 | awk '{ print $5, $12 }'
amixer sget Master | grep 'Right:' | awk -F' [] []' '{print $2}
amixer sget Master
amixer sget Master | grep 'Right:'
amixer sget Master | grep -E 'Right:'
amixer sget Master | grep 'Right:' | awk -F '[][]' '{ print $2 }\

amixer get Master
amixer --help
amixer -c 0 scontrols
amixer -c 0 sget Master
amixer sget Master
amixer sget Master | awk -F '[][]' '/dB/ { print $2 }'
amixer sget Master | awk -F "[][]" '/dB/ { print $2 }'
amixer sget Master | awk -F"[][]" '/dB/ { print $2 }'
amixer -D pulse sget Master | awk -F"[][]" '/dB/ { print $2 }'
amixer -D pulse sget Master
amixer -D pulse sget Master | awk -F"[][]" '/Left:/ { print $2 }'
amixer -D pulse sget Master | awk -F"[][]" '/Left:/ { print $2. $3 }'
amixer -D pulse sget Master | awk -F"[][]" '/Right:/ { print $2. $3 }'
amixer -D pulse sget Master | awk -F"[][]" '/Right:/ { print $2, $3 }'
amixer -D pulse sget Master | awk -F"[][]" '/Right:/ { print $2 }'
amixer -D pulse sget Master | awk -F"[] []" '/Right:/ { print $2 }'
amixer -D pulse sget Master | awk -F"[][]" '/Right:/ { print $2 }'
amixer sget Master | awk -F"[][]" '/Right:/ { print $2 }'
amixer get Master | egrep 'Playback.*?\[o' | egrep -o '[\o.+\]'
amixer get Master | grep -E 'Playback.*?\[o' | grep -E -o '[\o.+\]'
amixer get Master | grep -E 'Playback.*?\[o' | grep -E -o '\[o.+\]'
amixer sget Master | grep -E 'Playback.*?\[o' | grep -E -o '\[o.+\]'
amixer get Master
amixer sget Master | awk -F"[][]" '/Playback/ { print $2 }'
amixer sget Master | awk -F"[][]" '/Left/ { print $2 }'
amixer get Master | grep -E 'Playback.*?\[o' | grep -E -o '\[o.+\]' | head -n 1
amixer get Master | grep -o '\[o.+\]'
amixer get Master | grep -E -o '\[o.+\]'
amixer get Master | grep -E 'Playback.*?\[o'
amixer get Master
amixer get Master | grep -E -o '\[o.+\]' | head -n 1
amixer -D pulse get Master | grep -m 1 -oP '[0-9]+(?=%)'
pactl list sources | grep -A 10 'Name:.*input' | grep 'Mute:'
pactl list sources
$(amixer -D pulse get Master | grep '\[off\]')
(amixer -D pulse get Master | grep '\[off\]')
amixer -D pulse get Master | grep '\[off\]'
[[ $(amixer -D pulse get Master | grep '\[off\]') ]]
amixer -D pulse get Master | grep '\[off\]'
amixer -D pulse get Master | grep '\[on\]'
amixer -D pulse get Master | grep '[on]'
amixer -D pulse get Master | grep '\[on]'
amixer get Capture
amixer get Mic Boost
amixer get 'Mic Boost'
amixer get Mic
amixer sget Mic Boost
pactl get-source-mute @DEFAULT_SOURCE@
pactl get-source-mute @DEFAULT_SOURCE@ toggle
pactl get-source-mute @DEFAULT_SOURCE@
pactl set-source-mute @DEFAULT_SOURCE@ toggle
pactl get-source-mute @DEFAULT_SOURCE@
amixer get Capture
amixer get Capture | grep -o '\[off\]'
amixer get Capture | grep '\[off\]'
amixer -D pulse set Master on
amixer -D pulse set Master unmute
amixer -D pulse set Master on
amixer get Capture | grep -o '\[off\]'
amixer get Capture | grep -E -o '\[o.+\]' | head -n 1
amixer get Capture | grep -o '\[o.+\]' | head -n 1
amixer -D pulse set Capture unmute
amixer -D pulse set Capture on
amixer -D pulse set Capture mute
amixer -D pulse set Capture cap
amixer -D pulse set Capture nocap
amixer -D pulse set Capture cap
amixer get Capture | grep -E -o '\[o.+\]' | head -n 1
amixer -D pulse set Capture nocap
amixer get Capture
dunstify -i "${HOME}/.config/rice_assets/Icons/mic_mute2.png" --replace=555 -u normal "Micrófono: Mute" -t 1000 -u critical
dunstify -i "${HOME}/.config/bspwm/assets/mic_mute2.png" --replace=555 -u normal "Micrófono: Mute" -t 1000 -u critical
./Volume --toggle_mic
./Volume --toggle
./Volume --get
./Volume --toggle_mic
grep -irn "rofi.webp" --color
if [[ $(amixer -D pulse get Capture | grep -o '\[off\]') ]]; then\
		amixer -D pulse set Capture cap
[[ $(amixer -D pulse get Capture | grep -o '\[off\]') ]] && amixer -D pulse set Capture cap
[[ $(amixer -D pulse get Capture | grep '\[off\]') ]] && amixer -D pulse set Capture cap
[[ $(amixer -D pulse get Master | grep '\[off\]') ]] && amixer -D pulse set Master unmute
grep -irn "*rofi.webp" --color
grep -irn "rofi.webp" --color
grep -irn "ricetheme" --color
grep -irn "pa-rofi" --color
echo $RICETHEME
acpi -t
acpi -i -b
echo $http_proxy
./Updates --get-updates
./Updates --print-updates
git pull
makepkg -si
yay
sudo pacman -Syu
sudo nano /etc/pacman.conf
sudo pacman -Syu
sudo nano /etc/pacman.conf
proxyman
proxyman set
echo $http_proxy
source ~/.zshrc
echo $http_proxy
sudo pacman -Syu
sudo nano /etc/pacman.conf
sudo pacman -Syu
pacman -S archlinux-keyring
sudo pacman -S archlinux-keyring
sudo pacman -Syu
sudo nano /etc/pacman.conf
sudo pacman -Syu
su
yay
cd ~/.cache/yay/yay-git && git pull && makepkg -si
yay
sudo pacman -S libalpm
pacman --version
cd /tmp && git clone 'https://aur.archlinux.org/yay.git' && cd /tmp/yay && makepkg -si && cd ~ && rm -rf /tmp/yay/
echo $http_proxy
proxyman unset
source ~/.zshrc
cd /tmp && git clone 'https://aur.archlinux.org/yay.git' && cd /tmp/yay && makepkg -si && cd ~ && rm -rf /tmp/yay/
cd /tmp/yay && makepkg -si && cd ~ && rm -rf /tmp/yay/
yay
alacritty migrate
eww -c "$HOME/.config/bspwm/eww" open --toggle launchermenu
git clone https://aur.archlinux.org/paru.git && cd paru
makepkg -si
paru -Qua
yay
paru -S yay-git
yay
grep -irn "color" --color
./system_tray.zsh
zsh system_tray.zsh
stalonetray
amixer get Master | grep -E -o '\[.+\]' | head -n 1 | awk -F"[][]" '{ print $2 $4 }'
amixer get Master | grep -E -o '\[.+\]' | head -n 1 | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep 'Right:' | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep -E -o '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
amixer -D pulse sget Master | awk -F"[][]" '/Left:/ { print $2 }'
amixer -D pulse sget Master | awk -F"[][]" '/Left:/ { print $4 }'
amixer get Master | grep -E '.*?\[o' | grep -E -o '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep -E '.*?\[o'
amixer get Master | grep -E ':*?\[o'
amixer get Master | grep -E -o -m 1 '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep -E -o -m 1 '\[.+\]'
amixer get Master | grep -E -o -m 0 '\[.+\]'
amixer get Master | grep -E -o -m '\[.+\]'
amixer get Master | grep -Eom 1 '\[.+\]'
amixer get Master | grep -Em 1 '\[.+\]'
amixer get Master | grep -m 1 '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep -Em 1 '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
amixer get Master | grep -E -o '\[o.+\]' | head -n 1
amixer get Master | grep -E -o -m 1 '\[o.+\]'
amixer get Master | grep -Eom 1 '\[.+\]' | awk -F"[][]" '{ print $2, $4 }'
grep -irn "rice-colors" --color
grep -irn "volume.sh" --color
grep -irn "rice-colors" --color
$(iwgetid -r)
iwgetid -r
ip link | awk '/state UP/ {print $2}'
nmcli -t -f active,ssid dev wifi
nmcli --help
nmcli -t -f -c active,ssid dev wifi
nmcli -t -f NAME connection show --active
nmcli -t -f active,ssid dev wifi
nmcli -t -f active,ssid dev wifi | grep -v '^lo$'
nmcli -t -f active,ssid dev wifi | head -n 1
nmcli -t -f active,ssid dev wifi | head -n 1 | awk -F: '{print $2}'
nmcli -t -f active,ssid dev wifi | awk -F: '{print $2}'
nmcli -t -f NAME connection show --active | awk -F: '{print $2}'
nmcli -t -f NAME connection show --active | head -n 1 | awk -F: '{print $2}'
nmcli -t -f NAME connection show --active
nmcli -t -f NAME connection show --active | head -n 1
amixer -D pulse get Master | grep -o '[0-9]*%'
amixer -D pulse get Master | grep -m 1 -o '[0-9]*%'
[[ $(amixer -D pulse get Master | grep '\[off\]') ]] && echo "0"
sed -i ':a;N;$!ba;s/:geometry (geometry :x "[^"]*"\n:y "[^"]*"/:geometry (geometry :x ""\n:y "-71.9%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i ':a;N;$!ba;s/:geometry (geometry :x "[^"]*"\n:y "[^"]*"/:geometry (geometry :x "14%"\n:y "-71.9%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :x "[^"]*"/:geometry (geometry :x "-0.6%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :y "[^"]*"/:geometry (geometry :y "-0.6%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :x "[^"]*" :y "[^"]*"/:geometry (geometry :x "-0.6%" :y "-50%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :x "[^"]*" :y "[^"]*"/:geometry (geometry :x "" :y "-50%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
sed -i 's/:geometry (geometry :x "[^"]*" :y "[^"]*"/:geometry (geometry :y "-50%"/' "$HOME"/.config/bspwm/eww/player/player.yuck
grep -irn "launchermenu" --color
grep -irn "music" --color
grep -irn "--player" --color
grep -irn "player" --color
grep -irn "eww" --color
grep -irn "toggle" --color
eww open-many --toggle player
eww open --toggle player
grep -irn "defwindow music" --color
grep -irn "defwindow" --color
grep -irn "eww" --color
grep -irn "pidof eww" --color
grep -irn "pidof" --color
pidof -q eww || { eww -c "$HOME"/.config/bspwm/eww daemon & }
./MediaControl shuffle
./MediaControl --shuffle
./MediaControl --player
./MediaControl --shuffle
ranger /tmp/
systemctl suspend
./MediaControl --cover
./MediaControl --title
./MediaControl --status
./MediaControl --position
./MediaControl --positions
./MediaControl --lenght
./MediaControl --length
./MediaControl --lengths
./MediaControl --loop
./OpenApps --player
eww -c "$HOME/.config/bspwm/eww" open --toggle media
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle music
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle music
eww open-many --toggle player-closer player
eww open-many --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle player-closer
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle musica
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle calendar
eww -c "$HOME/.config/bspwm/eww" open --toggle notifications
eww -c "$HOME/.config/bspwm/eww" open --toggle powermenu
eww -c "$HOME/.config/bspwm/eww" open --toggle notifications
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle music
kill -9 -1
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle media
eww -c "$HOME/.config/bspwm/eww" open --toggle player
../scripts/OpenApps --player
OpenApps --player
mediacontrol --player
MediaControl --player
grep -irn "../scripts" --color
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle music
eww -c "$HOME/.config/bspwm/eww" open --toggle player
grep -irn "MediaControl" --color
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle musica
eww -c "$HOME/.config/bspwm/eww" update
eww -c "$HOME/.config/bspwm/eww" open --toggle musica
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww update
eww -c "$HOME/.config/bspwm/eww" update
eww -c "$HOME/.config/bspwm/eww" open --toggle player
../scripts/mediacontrol --player
../scripts/OpenApps --player
eww -c "$HOME/.config/bspwm/eww" update
eww -c "$HOME/.config/bspwm/eww" open --toggle player
eww -c "$HOME/.config/bspwm/eww" open --toggle media
../scripts/mediacontrol --positions
../scripts/mediacontrol --title
../scripts/mediacontrol --status
eww -c "$HOME/.config/bspwm/eww" open --toggle media
eww -c "$HOME/.config/bspwm/eww" open --toggle musica
eww -c "$HOME/.config/bspwm/eww" open --toggle media
paru -Qua
yay -S eww-git
eww --help
eww -V
kill -9 -1
grep -irn "network" --color
sudo pacman -Syu wireless-tools
sudo pacman -Syu wireless_tools
sudo pacman -S wireless_tools
iwgetid -r
sudo pacman -R wireless_tools
sudo pacman -Rcs wireless_tools
sudo pacman -R wireless_tools
check-network
./check-network
ping -c 1 archlinux.org || ping -c 1 google.com
ip link | awk '/state UP/ {print $2}'
./check-network --stat
./check-network --icon
MediaControl --previous
MediaControl --status
mpc status
mpc status | head -2
mpc status | head -2 | tail -1 | cut -c2-8 | sed 's/]//g' | sed 's/./\U&/'
MediaControl --status
MediaControl --status | head -2
MediaControl --status | head -1
playerctl --player=$Control status
MediaControl --status
playerctl --player=$Control status
MediaControl --status2
mpc status
MediaControl --status
playerctl -l --ignore-player=chromium | head -n 1; [ -z "$Control" ] && Control="MPD"
playerctl -l --ignore-player=chromium | head -n 1; [ -z "$Control" ] && Control="MPD" | echo $Control
[ -n "$(pgrep spotify)" ] && Control="spotify" || [ -n "$(pgrep mpd)" ] && Control="MPD" || Control="%any"
[ -n "$(pgrep spotify)" ] && Control="spotify" || Control="MPD"
MediaControl --status
MediaControl echo $Control
MediaControl --status
[ -z "$Control" ]
Control=$(playerctl -l --ignore-player=chromium | head -n 1); [ -z "$Control" ] && Control="MPD"
echo $Control
playerctl -l --ignore-player=chromium
playerctl -l
ps -p $(xdotool getwindowfocus getwindowid) -o comm=
pactl list | grep -q RUNNING
pactl list
pactl list | grep -q RUNNING
pactl list | grep -q 'RUNNING'
pactl list | grep 'RUNNING'
pactl list | grep -E 'RUNNING'
playerctl --help
playerctl -l
pacmd list-sinks-inputs
pacmd list-sink-inputs
pacmd list-sink-inputs | grep -w state
pacmd list-sink-inputs
pacmd list-sink-inputs | grep -w state | grep -q RUNNING
pacmd list-sink-inputs | grep -w state | grep RUNNING | awk '{print $1}'
pacmd list-sink-inputs | grep -w state | grep application.process.id | awk '{print $1}'
pacmd list-sink-inputs | grep -w state | grep 'application.process.id' | awk '{print $1}'
pacmd list-sink-inputs | grep -A 10 "state: RUNNING" | grep 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 10 "state: RUNNING"
pacmd list-sink-inputs | grep -A 100 "state: RUNNING"
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -o 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -E 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role' | awk '{print $2}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role' | awk '{print $1}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep 'media.role'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep 'music'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -q 'music'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'application.process.binary' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 50 "state: RUNNING" | grep 'application.process.binary' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 50 "state: RUNNING"
pacmd list-sink-inputs | grep -A 10 "state: RUNNING"
pacmd list-sink-inputs | grep -A 20 "state: RUNNING"
pacmd list-sink-inputs | grep -A 24 "state: RUNNING"
pacmd list-sink-inputs | grep -A 23 "state: RUNNING"
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -w 'application.process.binary' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F"" '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $2}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $1}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $4}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $5}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk -F'""' '{print $6}'
detectar_reproductor
echo $Control
detectar_reproductor
echo $REPRO
detectar_reproductor
pacmd list-sink-inputs | grep -A 50 "state: RUNNING" | awk '/media.role/ && /music/'
detectar_repro
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -wq 'media.role.*music' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -wq 'media.role.*music'
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -w 'media.role.*music'
pacmd list-sink-inputs | grep -A 50 "state: RUNNING" | awk '/media.role/ && /music/'
detectar_reproductor
detectar_repro
detectar_reproductor
pacmd list-sink-inputs | grep -A 23 "state: RUNNING"
detectar_reproductor
Control=$(playerctl -l --ignore-player=chromium | head -n 1); [ -z "$Control" ] && Control="MPD"
echo $Control
playerctl -l
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep 'media.role = $media_role' | grep 'application.process.binary' | awk '{print $3}'
detectar_reproductor
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -Fw 'media.role = \"music\"' | grep 'application.process.binary' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -Fw 'media.role = \"music\"' | grep 'application.process.binary'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -Fw 'media.role = \"music\"'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -Fw "media.role = \"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -Fw "media.role = \"music\"" | grep 'application.process.binary' | awk '{print $3}'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep "media.role = \"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -o "media.role = \"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -o "\"music\""
detectar_reproductor
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" 
pacmd list-sink-inputs | grep -A 25 "state: RUNNING" 
pacmd list-sink-inputs | grep -A 30 "state: RUNNING" 
detectar_reproductor
detectar_repro
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role.*music/'
pacmd list-sink-inputs | awk '/state: RUNNING/'
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role.*music*/'
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role = "music"/'
pacmd list-sink-inputs | grep -Fw "application.process.binary"
pacmd list-sink-inputs
detectar_repro
ps aux
ps aux | awk '$0 ~/media\.role*music/ && $0 ~/state.*RUNNING/ { print "Musica en reproduccion" }'
pacmd list-sink-inputs | awk '$0 ~/media\.role*music/ && $0 ~/state.*RUNNING/ { print "Musica en reproduccion" }'
pacmd list-sink-inputs | awk '$0 ~ /media\.role*music/ && $0 ~ /state.*RUNNING/ { print "Musica en reproduccion" }'
ps aux | awk '$0 ~ /media\.role*music/ && $0 ~ /state.*RUNNING/ { print "Musica en reproduccion" }'
pacmd list-sink-inputs
detectar_repro
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role = "music"/'
pacmd list-sink-inputs | awk '/media.role = "music"/'
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role = "music"/'
pacmd list-sink-inputs | awk '/state: RUNNING/ && /media.role = "music"/ {print}'
pacmd list-sink-inputs | grep -A 30 "state: RUNNING" 
pacmd list-sink-inputs | grep -A 23 -o "\"music\""
pacmd list-sink-inputs | grep -A 23 "\"music\""
pacmd list-sink-inputs | grep -A 10 "\"music\""
pacmd list-sink-inputs | grep -A 9 "\"music\""
detect_player
pacmd list-sink-inputs | grep -A 10 '"music"'
pacmd list-sink-inputs | grep -A 10 '"RUNNING"'
pacmd list-sink-inputs | grep -A 10 'RUNNING'
pacmd list-sink-inputs | grep '"music"'
detect_player
pacmd list-sink-inputs | grep -A 10 'RUNNING'
detect_player
cat /tmp/audio_programs.txt
sudo cat /tmp/audio_programs.txt
detect_player
pacmd list-sink-inputs | grep -A 100 'RUNNING' > ~/.config/bspwm/assets/audio_programs.txt
cat ~/.config/bspwm/assets/audio_programs.txt
pacmd list-sink-inputs | grep -A 100 'RUNNING' > ~/.config/bspwm/assets/audio_programs.txt
detect_player
cat ~/.config/bspwm/assets/audio_programs.txt
detect_player
cat ~/.config/bspwm/assets/audio_programs.txt
rm ~/.config/bspwm/assets/audio_programs.txt
cat ~/.config/bspwm/assets/audio_programs.txt
detect_player
pacmd list-sink-inputs | grep 'application.process.binary' | awk '{print $3}'
detect_player
pacmd list-sink-inputs | awk 'RUNNING'
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -o "media.role = \"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep "media.role = \"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING"
pacmd list-sink-inputs | grep -A 30 "state: RUNNING"
pacmd list-sink-inputs | grep -o "\"music\""
pacmd list-sink-inputs
pacmd list-sink-inputs | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 23 "state: RUNNING" | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 10 "state: RUNNING" | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 20 "state: RUNNING" | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 20 "state: RUNNING"
pacmd list-sink-inputs | grep -A "state: RUNNING"
pacmd list-sink-inputs | grep "state: RUNNING"
pacmd list-sink-inputs | grep -n "state: RUNNING"
pacmd list-sink-inputs | grep -A 100 "state: RUNNING"
pacmd list-sink-inputs | grep -A 100 "state: RUNNING" | grep -o "\"music\""
pacmd list-sink-inputs | grep -A 100 "state: RUNNING"
pacmd list-sink-inputs | grep -o "\"music\""
pacmd list-sink-inputs | grep -n "\"music\""
pacmd list-sink-inputs | grep -n "\"music\"" | awk -F: '{print $1}'
pacmd list-sink-inputs | grep -n "\"music\"" | awk -F: '{print $2}'
detectar_reproductor
ncmpcpp
mpc -q toggle
mpc -h
mpc --h
mpc --help
mpc -q start
mpc status
mpc play
mpc -q play
mpc -q toggle
mpc -q play
mpc -q stop
mpc -q pause
mpc -q play
playerctl -l
ncmpcpp
echo $Control
Control=$(playerctl -l --ignore-player=chromium | head -n 1); [[ -z "$Control" ]] && (Control="MPD"; mpc -q play) || mpc -q pause
Control=$(playerctl -l --ignore-player=chromium | head -n 1); [[ -n "$Control" ]] && (Control="MPD"; mpc -q play) || mpc -q pause
detect_player
playerctl -l
detect_player
playerctl --player=$Control status
detect_player
echo $Control
playerctl --player=vlc status
playerctl --player=vlc
playerctl --player=vlc play
playerctl --player=vlc open
playerctl --player=vlc loop
playerctl --player=vlc status
detect_player
playerctl -l | grep vlc
playerctl -l
playerctl -l | grep vlc
detect_player
playerctl -l | grep spotify
detect_player
ncmpcpp
mpd kill
kill mpd
detect_player
playerctl -l | grep spotify
playerctl -l | grep mpd
playerctl -l | grep MPD
detect_player
./media_control
playerctl --player=vlc pause
playerctl --player=vlc play
MediaControl --status; echo $Control
MediaControl --status
playerctl --player=$Control status
mpc status | head -2 | tail -1 | cut -c2-8 | sed 's/]//g' | sed 's/./\U&/'
MediaControl --status
MediaControl --player
MediaControl
MediaControl --player
detect_player
zip -r dotfiles_gh0stzk(sebas1080p) zsh ranger paru nvim ncmpcpp mpd bspwm alacritty
zip -r dotfiles_gh0stzk(sebas1080p) zsh/ ranger/ paru/ nvim/ ncmpcpp/ mpd/ bspwm/ alacritty/
zip -r dotfiles_gh0stzk(sebas1080p).zip zsh/ ranger/ paru/ nvim/ ncmpcpp/ mpd/ bspwm/ alacritty/
zip -r dotfiles_gh0stzk(sebas1080p).zip zsh ranger paru nvim ncmpcpp mpd bspwm alacritty
zip -r dotfiles_gh0stzk(sebas1080p).zip "zsh" "ranger" "paru" "nvim" "ncmpcpp" "mpd" "bspwm" "alacritty"
zip -r dotfil.zip "zsh" "ranger" "paru" "nvim" "ncmpcpp" "mpd" "bspwm" "alacritty"
tar -czvf dotfiles.tar.gz "zsh" "ranger" "paru" "nvim" "ncmpcpp" "mpd" "bspwm" "alacritty"
