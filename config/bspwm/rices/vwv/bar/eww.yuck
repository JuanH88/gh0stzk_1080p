(defwidget bar []
  (centerbox :orientation "h"
    (topstuff)
    (music)
    (sidestuff)
  )
)

(defwindow powermenu
  :monitor 0
  :exclusive "false"
  :stacking "fg"
  :geometry (geometry :x "-58"
                      :y "-40"
                      :width "150px"
                      :height "40px"
                      :anchor "bottom right")
  (box :class "powerbuttons"
    (button 
      :class "poweroff"
      :onclick "poweroff &"
      ""
    )
    (button 
      :class "restart"
      :onclick "reboot &"
      ""
    )
    (button 
      :class "sleep"
      :onclick "eww -c ~/.config/bspwm/rices/vwv/bar open powermenu --toggle & systemctl suspend &"
      ""
    )
  )
)

(defwidget meters []
  (box :class "meters" :orientation "h" :halign "end" :spacing 12 :space-evenly "false"
    (metric :label "󰍛"
            :value "󱃃 ${temp}C°"
            :onchange ""
            :onclick "")
    (metric :label "󰆼"
            :value "󰆼  ${memoryusage}%"
            :onchange ""
            :onclick "")
    (metric :label ""
            :value "   ${cpusage}%"
            :onchange ""
            :onclick "")
    (metric :label ""
            :value "${EWW_BATTERY.BAT0.status == "Discharging" ? '󱧥' : '󰂄'} ${EWW_BATTERY.BAT0.capacity}%"
            :onchange ""
            :onclick "xfce4-power-manager-settings &")
    (metric :label ""
            :value {volume != "0" ? "󰕾  ${volume}%" : "󰝟 "}
            :onchange "amixer -D pulse sset Master {}%"
            :onclick "~/.config/bspwm/rices/vwv/bar/scripts/volume.sh --toggle")
  )
)

(defwidget connectivity []
  (box :class "connectivity"
    :spacing 10
    (button 
      :class "bluetooth"
      :onclick "rofi-bluetooth &"
      ""
    )
    (button 
      :class "wifi"
      :onclick "OpenApps --netmanager"
      {networkstatus != "lo" ? "󰤨" : "󰤭"}
    )
    (button 
      :class "power"
      :onclick "eww -c ~/.config/bspwm/rices/vwv/bar open powermenu --toggle &"
      ""
    )
  )
)

(deflisten workspaces "./scripts/WorkSpaces")

(defwidget topstuff []
  (box :class "topstuff" :orientation "h" :space-evenly false
    (launcher)
    (literal :content workspaces)
    (systray :class "tray" :spacing 5)
  )
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (meters)
    (connectivity)
    (time)
  )
)

(defwidget launcher []
  (button 
    :class "launcher"
    :onclick "killall rofi || rofi -show drun -theme ~/.config/bspwm/rices/vwv/config.rasi &"
    :onrightclick "OpenApps --rice"
    ""
  )
)

(defwidget music []
  (button :class "music"
       :halign "center"
       :style { music == "" ? "background-color:transparent" : ""}
       :onclick {ismusicopenornot != false ? `eww -c ~/.config/bspwm/rices/vwv/bar open musiccenter --toggle --no-daemonize & eww -c ~/.config/bspwm/rices/vwv/bar update ismusicopenornot=false` : ismusicopenornot != true ? `eww -c ~/.config/bspwm/rices/vwv/bar open musiccenter --no-daemonize & eww -c ~/.config/bspwm/rices/vwv/bar update ismusicopenornot=true` : "Nothing is currently playing."}
      {ismusicopenornot != false ? "󰅖" : music != "" ? "  ${music}" : ""}
  )
)

(defwidget metric [label value onchange onclick]
  (box :orientation "h" 
       :class "metric"
       :space-evenly false
    (button :onclick onclick `${value}`)
  )
)

(defpoll username :interval "100s"
  "whoami")
(defpoll hostname :interval "100s"
  "cat /etc/hostname")

(defwidget topcenter []
  (box :class "topcenter" :orientation "h" :halign "start" :spacing 10 :space-evenly "false"
    (image :class "pfp" :valign "start" :style `background-image: url("/home/${username}/.config/bspwm/assets/profile.png");` )
    (box :orientation "v" :space-evenly "false" :valign "center" :spacing 5
      (label :class "welcometext" :text username :halign "start" :valign "center")
      (label :text "${username}@${hostname}" :halign "center" :halign "start" :valign "start" :style "color: #1e66f5")
      (label :text "${uptime}" :halign "start" :valign "start" :halign "start" :style "color: #1e66f5")
    )
  )
)
(defwidget middlecenter []
  (box :class "middlecenter" :orientation "v" :valign "center" :halign "center" :spacing 5
    (scalecenter :label ""
        :value "${brightness}"
        :onchange "brightnessctl set {}%")
  )
)
(defwidget bottomcenter []
  (box :class "bottomcenter" :valign "end" :orientation "v" :halign "center" :spacing 10  
    (box :spacing 10
      (button :class { networkstatus != "lo" ? "testenabled" : "test"} :onclick {networkstatus != "lo" ? "rfkill block wifi &" : "rfkill unblock wifi"} "󰤨 ")
      (button :class { bluetoothstatus != "no" ? "testenabled" : "test"}  :onclick {bluetoothstatus != "no" ? "bluetoothctl power off" : "bluetoothctl power on"}  "")
      (button :class { nighttoggle != false ? "testenabled" : "test"} :onclick {nighttoggle != false ? "~/.config/bspwm/rices/vwv/bar/scripts/redshift toggle & eww -c ~/.config/bspwm/rices/vwv/bar update nighttoggle=false" : "~/.config/bspwm/rices/vwv/bar/scripts/redshift toggle & eww -c ~/.config/bspwm/rices/vwv/bar update nighttoggle=true"} " ")
    )
    (box :spacing 10
      (button :class "test" :onclick "eww -c ~/.config/bspwm/rices/vwv/bar open actioncenter --toggle && ScreenShoTer --sel" "󰹑 ")
      (button :class "test" :onclick "thunar ~ & eww -c ~/.config/bspwm/rices/vwv/bar open actioncenter --toggle &" " ")
      (button :class "test" :onclick "./scripts/lightmode.sh" "")
    )
  )
)

(defwidget scalecenter [label value onchange]
  (box :orientation "h"
       :class "scalecenter"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)
  )
)
(defwindow actioncenter
  :monitor 0
  :exclusive "false"
  :stacking "fg"
  :geometry (geometry :x "0"
                      :y "-40"
                      :width "300px"
                      :height "300px"
                      :anchor "bottom right")
  (centerbox :orientation "v"
    (topcenter)
    (middlecenter)
    (bottomcenter)
  )
)

(include "./yuck/music_center.yuck")
(include "./yuck/calendar.yuck")
(include "./variables.yuck")

(defwidget time []
  (box :class "time"
       :orientation "h"
       :space-evenly false
       :valign "center"
    (button :onclick "eww -c ~/.config/bspwm/rices/vwv/bar close calendarcenter --no-daemonize; eww -c ~/.config/bspwm/rices/vwv/bar open actioncenter --toggle --no-daemonize &"
      :onrightclick "eww -c ~/.config/bspwm/rices/vwv/bar close actioncenter --no-daemonize; eww -c ~/.config/bspwm/rices/vwv/bar open calendarcenter --toggle --no-daemonize &"
    "${hours}:${minutes} ${pmoram}")
  )
)

(defpoll
    hours
      :interval "1s"
        "date +%I")
(defpoll
    minutes
      :interval "1s"
        "date +%M")
(defpoll
    pmoram
      :interval "1s"
        "date +%p")

(defwindow notificationwidget
  :monitor 0
  :exclusive "true"
  :stacking "fg"
  :geometry (geometry :x "0"
                      :y "-40"
                      :width "0px"
                      :height "0px"
                      :anchor "bottom right")
  (revealer :transition "slideup" :duration "500ms" :reveal notificationreveal (box :orientation "h" :space-evenly "false"
    (box :orientation "v" :space-evenly "false" :valign "center" :class "notificationbox"
      (box :spacing 10 :space-evenly "false"
        (label :class "summary" :text "${notification.summary}" :halign "start")
        (label :class "notificationicon" :text {notification.source == "Spotify" ? "" : notification.source == "VOLUME" ? "󰋋" : notification.source == "firefox" ? "󰈹" : notification.source == "MICROPHONE" ? "󰍬" : notification.source == "BRIGHTNESS" ? "󰃠" : ""} :halign "start")
      )
      (label :class "body" :text "${notification.body}" :halign "start")
    )
  ))
)

;; windows
(defwindow notification :monitor 0 :wm-ignore true :focusable "true"
  :geometry (geometry :x "46" :y "6" :height "1068" :width "500" :anchor "top left")
  (notifs-box))

(defwindow bar
  :monitor 0
  :exclusive "true"
  :focusable "false"
  :stacking "fg"
  :geometry (geometry :x "0"
                      :y "0"
                      :width "100%"
                      :height "40px"
                      :anchor "bottom center")
  (bar)
)
